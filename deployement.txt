🚀 DEPLOY FLASK APP ON RENDER (FREE)
🧩 1️⃣ Prepare your project

Make sure your project structure looks like this (typical Flask app):

food_ordering_system/
│
├── app.py
├── models.py
├── requirements.txt
├── instance/
│   └── database.db
├── static/
│   ├── style.css
│   ├── script.js
│   └── images/
├── templates/
│   ├── index.html
│   ├── menu.html
│   ├── cart.html
│   ├── admin_dashboard.html
│   ├── login_checkout.html
│   └── ...
└── README.md


✅ Check these before you push:

You already have your repo on GitHub

requirements.txt lists all dependencies
(You can generate it if needed → pip freeze > requirements.txt)

Flask entry point (app.py) contains:

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)

🌐 2️⃣ Create a Render account

Go to 🔗 https://render.com

Click Sign Up → choose GitHub

Authorize Render to access your GitHub repos

⚙️ 3️⃣ Create a new web service

Click New → Web Service

Choose your GitHub repository

Render auto-detects your project.

You’ll now fill some fields:

Setting	Value
Name	quickbite (or anything)
Region	Singapore / Oregon (closest to you)
Branch	main (or master)
Build Command	pip install -r requirements.txt
Start Command	gunicorn app:app
Environment	Python 3

⚠️ Make sure gunicorn is in your requirements.txt!
If not, add:

Flask
gunicorn
sqlalchemy


and commit again.

📁 4️⃣ SQLite & Static Files setup

Render supports persistent SQLite but your database resets when redeployed.
So:

For testing: keep using SQLite (instance/database.db)

For production / persistence: switch to PostgreSQL later (Render gives one free too)

Your static files (CSS, JS, images) work automatically — Flask serves them via /static/...

🧰 5️⃣ Deployment

Click Deploy Web Service
Render will:

clone your repo

install dependencies

run Flask via gunicorn

You’ll see logs in the dashboard.
After ~2 minutes you’ll get a live link, e.g.

https://quickbite.onrender.com


✅ Done — your Flask app is live 🎉

🔁 6️⃣ Future updates

When you push new commits to GitHub:

Render auto-rebuilds & redeploys

No need to log in again

🆓 7️⃣ Optional: Prevent sleeping (Render free plan)

Render’s free plan sleeps after inactivity.
You can use:

UptimeRobot
 → ping every 15 min
keeps it alive

🪄 Summary
Step	What to do
1️⃣	Push full Flask repo to GitHub
2️⃣	Create Render account
3️⃣	Connect repo → Web Service
4️⃣	Add build & start commands
5️⃣	Deploy
6️⃣	Visit live URL
7️⃣	Add uptime pinger (optional)


  🚀 Then, for Render:

Build Command

pip install -r requirements.txt


Start Command

gunicorn app:app
